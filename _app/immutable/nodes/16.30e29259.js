import{S as ts,b as rs,s as cs,m as y,w as r,c as i,C as S,p as D,q as f,x as c,k as a,d as m,D as g,u as os,f as l,I as u,E as h,y as es,j as I,g as H,F as L,M as Fs}from"../chunks/index.587ce3da.js";import{C as O}from"../chunks/CodeFence.d00fd8d6.js";import{L as ys}from"../chunks/Link.9154f977.js";import"../chunks/paths.e43bbb84.js";import{f as is}from"../chunks/kit-docs.69443ce3.js";function Ds(C){let p;return{c(){p=r("#")},l(o){p=c(o,"#")},m(o,e){l(o,p,e)},d(o){o&&a(p)}}}function fs(C){let p,o=C[0].title+"",e,_,v,P=C[0].description+"",T,U,t,F,Q,M,E,R,z,w,V,G,d,b,W,J,$,q,X,K,A,j,Y,N,B,x;return F=new ys({props:{class:"header-anchor",href:"#direcstore-data-query-specification","aria-hidden":"true",$$slots:{default:[Ds]},$$scope:{ctx:C}}}),d=new O({props:{lang:"javascript",ext:"js",linesCount:22,code:`<pre><code><span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">select</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">from</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">name</span><span style="color: #89DDFF">,</span><span style="color: #F07178">     </span><span style="color: #676E95">// table or view name</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">fields</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> []</span><span style="color: #89DDFF">,</span><span style="color: #F07178">     </span><span style="color: #676E95">// fields name</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">where</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> [        </span><span style="color: #676E95">// data filter conditions</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                left</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">field_name</span><span style="color: #89DDFF">,</span><span style="color: #F07178">   </span><span style="color: #676E95">// field name</span></span>
<span class="line"><span style="color: #F07178">                opr</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">operator</span><span style="color: #89DDFF">,</span><span style="color: #F07178">      </span><span style="color: #676E95">// operator i.e. = &gt; &lt; like</span></span>
<span class="line"><span style="color: #F07178">                right</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value</span><span style="color: #F07178">        </span><span style="color: #676E95">// comparable value</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">limit</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">number</span><span style="color: #89DDFF">,</span><span style="color: #F07178">              </span><span style="color: #676E95">// maximum number of rows can be returned</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">offset</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">number</span><span style="color: #89DDFF">,</span><span style="color: #F07178">             </span><span style="color: #676E95">// number of rows skipped from begining</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">orderBy</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> [</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                field</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">field_name</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span><span style="color: #676E95">// sort by field name</span></span>
<span class="line"><span style="color: #F07178">                order</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">asc</span><span style="color: #F07178"> </span><span style="color: #89DDFF">|</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">desc</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span><span style="color: #676E95">// ordering </span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        ]</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">        </span></span>
<span class="line"></span></code></pre>`}}),$=new O({props:{lang:"javascript",ext:"js",linesCount:11,code:`<pre><code><span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">insert</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">into</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">name</span><span style="color: #89DDFF">,</span><span style="color: #F07178">     </span><span style="color: #676E95">// table or view name</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">entry</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">        </span><span style="color: #676E95">// pairs of field name and value in a data row</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #FFCB6B">field1</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #FFCB6B">field2</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value2</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">...</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">},</span><span style="color: #F07178">      </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">        </span></span>
<span class="line"></span></code></pre>`}}),A=new O({props:{lang:"javascript",ext:"js",linesCount:12,code:`<pre><code><span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">update</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">into</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">name</span><span style="color: #89DDFF">,</span><span style="color: #F07178">     </span><span style="color: #676E95">// table or view name</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">doc</span><span style="color: #89DDFF">:</span><span style="color: #F07178">  </span><span style="color: #A6ACCD">doc_id</span><span style="color: #89DDFF">,</span><span style="color: #F07178">   </span><span style="color: #676E95">// id of the updating data row</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">entry</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">        </span><span style="color: #676E95">// pairs of field name and value in a data row</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #FFCB6B">field1</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #FFCB6B">field2</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value2</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">...</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">},</span><span style="color: #F07178">      </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">  </span></span>
<span class="line"></span></code></pre>`}}),B=new O({props:{lang:"javascript",ext:"js",linesCount:7,code:`<pre><code><span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">delete</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">from</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">name</span><span style="color: #89DDFF">,</span><span style="color: #F07178">     </span><span style="color: #676E95">// table or view name</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">doc</span><span style="color: #89DDFF">:</span><span style="color: #F07178">  </span><span style="color: #A6ACCD">doc_id</span><span style="color: #89DDFF">,</span><span style="color: #F07178">   </span><span style="color: #676E95">// id of the deleting data row</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">  </span></span>
<span class="line"></span></code></pre>`}}),{c(){p=y("h1"),e=r(o),_=i(),v=y("p"),T=r(P),U=i(),t=y("h2"),S(F.$$.fragment),Q=r(" DirecStore - data query specification"),M=i(),E=y("p"),R=r("The data query is presented by plain object which can be constructed and pass thru data services"),z=i(),w=y("p"),V=r("Select query"),G=i(),S(d.$$.fragment),b=y("p"),W=r("Insert query - currently support single data row only"),J=i(),S($.$$.fragment),q=y("p"),X=r("Update query - currently support single data row only"),K=i(),S(A.$$.fragment),j=y("p"),Y=r("Delete query - currently support single data row only"),N=i(),S(B.$$.fragment),this.h()},l(s){p=D(s,"H1",{});var n=f(p);e=c(n,o),n.forEach(a),_=m(s),v=D(s,"P",{});var k=f(v);T=c(k,P),k.forEach(a),U=m(s),t=D(s,"H2",{id:!0,tabindex:!0});var Z=f(t);g(F.$$.fragment,Z),Q=c(Z," DirecStore - data query specification"),Z.forEach(a),M=m(s),E=D(s,"P",{});var ss=f(E);R=c(ss,"The data query is presented by plain object which can be constructed and pass thru data services"),ss.forEach(a),z=m(s),w=D(s,"P",{});var ns=f(w);V=c(ns,"Select query"),ns.forEach(a),G=m(s),g(d.$$.fragment,s),b=D(s,"P",{});var as=f(b);W=c(as,"Insert query - currently support single data row only"),as.forEach(a),J=m(s),g($.$$.fragment,s),q=D(s,"P",{});var ls=f(q);X=c(ls,"Update query - currently support single data row only"),ls.forEach(a),K=m(s),g(A.$$.fragment,s),j=D(s,"P",{});var ps=f(j);Y=c(ps,"Delete query - currently support single data row only"),ps.forEach(a),N=m(s),g(B.$$.fragment,s),this.h()},h(){os(t,"id","direcstore-data-query-specification"),os(t,"tabindex","-1")},m(s,n){l(s,p,n),u(p,e),l(s,_,n),l(s,v,n),u(v,T),l(s,U,n),l(s,t,n),h(F,t,null),u(t,Q),l(s,M,n),l(s,E,n),u(E,R),l(s,z,n),l(s,w,n),u(w,V),l(s,G,n),h(d,s,n),l(s,b,n),u(b,W),l(s,J,n),h($,s,n),l(s,q,n),u(q,X),l(s,K,n),h(A,s,n),l(s,j,n),u(j,Y),l(s,N,n),h(B,s,n),x=!0},p(s,[n]){(!x||n&1)&&o!==(o=s[0].title+"")&&es(e,o),(!x||n&1)&&P!==(P=s[0].description+"")&&es(T,P);const k={};n&2&&(k.$$scope={dirty:n,ctx:s}),F.$set(k)},i(s){x||(I(F.$$.fragment,s),I(d.$$.fragment,s),I($.$$.fragment,s),I(A.$$.fragment,s),I(B.$$.fragment,s),x=!0)},o(s){H(F.$$.fragment,s),H(d.$$.fragment,s),H($.$$.fragment,s),H(A.$$.fragment,s),H(B.$$.fragment,s),x=!1},d(s){s&&a(p),s&&a(_),s&&a(v),s&&a(U),s&&a(t),L(F),s&&a(M),s&&a(E),s&&a(z),s&&a(w),s&&a(G),L(d,s),s&&a(b),s&&a(J),L($,s),s&&a(q),s&&a(K),L(A,s),s&&a(j),s&&a(N),L(B,s)}}}function ms(C,p,o){let e;return Fs(C,is,_=>o(0,e=_)),[e]}class Bs extends ts{constructor(p){super(),rs(this,p,ms,fs,cs,{})}}export{Bs as component};
