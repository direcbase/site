import{S as Cs,b as is,s as fs,m as o,w as D,c as C,C as I,p as t,q as r,x as y,k as n,d as i,D as S,u as Fs,f as p,I as c,E as K,y as As,j as L,g as Q,F as T,M as ms}from"../chunks/index.587ce3da.js";import{C as H}from"../chunks/CodeFence.c091ea5b.js";import{L as us}from"../chunks/Link.9154f977.js";import"../chunks/paths.65eee000.js";import{f as $s}from"../chunks/kit-docs.69443ce3.js";function ds(m){let l;return{c(){l=D("#")},l(e){l=y(e,"#")},m(e,F){p(e,l,F)},d(e){e&&n(l)}}}function _s(m){let l,e=m[0].title+"",F,q,v,U=m[0].description+"",O,M,A,f,X,z,b,Y,G,u,w,Z,J,$,h,g,ss,N,P,as,R,d,j,ns,V,_,x,ps,W,E,k;return f=new us({props:{class:"header-anchor",href:"#direcstore-data-query-apis","aria-hidden":"true",$$slots:{default:[ds]},$$scope:{ctx:m}}}),u=new H({props:{lang:"javascript",ext:"js",linesCount:2,code:`<pre><code><span class="line"><span style="color: #89DDFF">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">direcstore</span><span style="color: #F07178"> </span><span style="color: #89DDFF">as</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ds</span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">direcbase</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span></code></pre>`}}),$=new H({props:{lang:"javascript",ext:"js",linesCount:9,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> result </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">await</span><span style="color: #A6ACCD"> ds</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">select</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">from</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">table_name</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">where</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">field_name</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">operator</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">value</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">orderBy</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">field_name</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ASC</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">limit</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">10</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">offset</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">5</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">onChange</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">   </span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95">// data changes handling logic here</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)                         </span></span>
<span class="line"></span></code></pre>`}}),d=new H({props:{lang:"javascript",ext:"js",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> entry </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95">// ... key-value pairs go here</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> result </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">await</span><span style="color: #A6ACCD"> ds</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">insert</span><span style="color: #A6ACCD">(entry)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">into</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">table_name</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),_=new H({props:{lang:"javascript",ext:"js",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> recordKey </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">abc</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> updateData </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95">// ... key-value pairs go here</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> result </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">await</span><span style="color: #A6ACCD"> ds</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">update</span><span style="color: #A6ACCD">(recordKey)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">into</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">table_name</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">set</span><span style="color: #A6ACCD">(updateData)</span></span>
<span class="line"></span></code></pre>`}}),E=new H({props:{lang:"javascript",ext:"js",linesCount:3,code:`<pre><code><span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> recordKey </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">abc</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> result </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">await</span><span style="color: #A6ACCD"> ds</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">delete</span><span style="color: #A6ACCD">(recordKey)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">from</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">table_name</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),{c(){l=o("h1"),F=D(e),q=C(),v=o("p"),O=D(U),M=C(),A=o("h2"),I(f.$$.fragment),X=D(" DirecStore - data query APIs"),z=C(),b=o("p"),Y=D(`The data query APIs are chained methods which represent similarly to SQL query syntax
Import data query module`),G=C(),I(u.$$.fragment),w=o("p"),Z=D("Select query"),J=C(),I($.$$.fragment),h=o("blockquote"),g=o("p"),ss=D("onChange method is applied for the purpose of listening to data changes in reatime"),N=C(),P=o("p"),as=D("Insert query"),R=C(),I(d.$$.fragment),j=o("p"),ns=D("Update query"),V=C(),I(_.$$.fragment),x=o("p"),ps=D("Delete query"),W=C(),I(E.$$.fragment),this.h()},l(s){l=t(s,"H1",{});var a=r(l);F=y(a,e),a.forEach(n),q=i(s),v=t(s,"P",{});var B=r(v);O=y(B,U),B.forEach(n),M=i(s),A=t(s,"H2",{id:!0,tabindex:!0});var ls=r(A);S(f.$$.fragment,ls),X=y(ls," DirecStore - data query APIs"),ls.forEach(n),z=i(s),b=t(s,"P",{});var es=r(b);Y=y(es,`The data query APIs are chained methods which represent similarly to SQL query syntax
Import data query module`),es.forEach(n),G=i(s),S(u.$$.fragment,s),w=t(s,"P",{});var os=r(w);Z=y(os,"Select query"),os.forEach(n),J=i(s),S($.$$.fragment,s),h=t(s,"BLOCKQUOTE",{});var ts=r(h);g=t(ts,"P",{});var rs=r(g);ss=y(rs,"onChange method is applied for the purpose of listening to data changes in reatime"),rs.forEach(n),ts.forEach(n),N=i(s),P=t(s,"P",{});var cs=r(P);as=y(cs,"Insert query"),cs.forEach(n),R=i(s),S(d.$$.fragment,s),j=t(s,"P",{});var Ds=r(j);ns=y(Ds,"Update query"),Ds.forEach(n),V=i(s),S(_.$$.fragment,s),x=t(s,"P",{});var ys=r(x);ps=y(ys,"Delete query"),ys.forEach(n),W=i(s),S(E.$$.fragment,s),this.h()},h(){Fs(A,"id","direcstore-data-query-apis"),Fs(A,"tabindex","-1")},m(s,a){p(s,l,a),c(l,F),p(s,q,a),p(s,v,a),c(v,O),p(s,M,a),p(s,A,a),K(f,A,null),c(A,X),p(s,z,a),p(s,b,a),c(b,Y),p(s,G,a),K(u,s,a),p(s,w,a),c(w,Z),p(s,J,a),K($,s,a),p(s,h,a),c(h,g),c(g,ss),p(s,N,a),p(s,P,a),c(P,as),p(s,R,a),K(d,s,a),p(s,j,a),c(j,ns),p(s,V,a),K(_,s,a),p(s,x,a),c(x,ps),p(s,W,a),K(E,s,a),k=!0},p(s,[a]){(!k||a&1)&&e!==(e=s[0].title+"")&&As(F,e),(!k||a&1)&&U!==(U=s[0].description+"")&&As(O,U);const B={};a&2&&(B.$$scope={dirty:a,ctx:s}),f.$set(B)},i(s){k||(L(f.$$.fragment,s),L(u.$$.fragment,s),L($.$$.fragment,s),L(d.$$.fragment,s),L(_.$$.fragment,s),L(E.$$.fragment,s),k=!0)},o(s){Q(f.$$.fragment,s),Q(u.$$.fragment,s),Q($.$$.fragment,s),Q(d.$$.fragment,s),Q(_.$$.fragment,s),Q(E.$$.fragment,s),k=!1},d(s){s&&n(l),s&&n(q),s&&n(v),s&&n(M),s&&n(A),T(f),s&&n(z),s&&n(b),s&&n(G),T(u,s),s&&n(w),s&&n(J),T($,s),s&&n(h),s&&n(N),s&&n(P),s&&n(R),T(d,s),s&&n(j),s&&n(V),T(_,s),s&&n(x),s&&n(W),T(E,s)}}}function Es(m,l,e){let F;return ms(m,$s,q=>e(0,F=q)),[F]}class Ps extends Cs{constructor(l){super(),is(this,l,Es,_s,fs,{})}}export{Ps as component};
